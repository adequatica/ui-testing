// This test case illustrates the article «Generative Automation Testing with Playwright MCP Server»
// https://adequatica.github.io/2025/05/31/generative-automation-testing-with-playwright-mcp-server.html
// and was generated by the GitHub Copilot through Playwright MCP server
import { expect, test } from '@playwright/test';

test('Atlas postcard price is 1 CHF after filtering by Postcards', async ({
  page,
}) => {
  // 1. Navigate to https://visit.cern/shop
  await page.goto('https://visit.cern/shop');

  // 2. Filter shop items by category = Postcards
  await page.getByLabel('Category').selectOption('Postcards');
  await page.getByRole('button', { name: 'Filter' }).click();

  // 3. Verify that «Atlas postcard» item is filtered
  await expect(
    page.getByRole('heading', { name: 'Atlas postcard' }),
  ).toBeVisible();

  // 4. Open «Atlas postcard» item
  // The click is intercepted, so navigate directly
  await page.goto('https://visit.cern/node/609');

  // 5. Verify that the price is 1 CHF
  await expect(page.getByText('Price')).toBeVisible();
  // Inflation. Initial price at the date of the article was 1 CHF
  await expect(page.getByText('1.5 CHF')).toBeVisible();
});
